import vk_api, cfg, time, random
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.longpoll import VkLongPoll, VkEventType
from methods import *


def admins_listen(vk, owner_info, event):
    try:
        if event.text != "":
            for dont in cfg.dont_send_message:
                try:
                    event.text.index(dont)
                except:
                    pass
                else:
                    try:
                        vk.method("messages.delete", {"peer_id": event.peer_id,"message_id": event.message_id, "delete_for_all": "1"})
                    except Exception as error:
                        return
                    send_message(vk, event, f"üëÅ –í —á–∞—Ç–µ –∑–∞–ø—Ä–µ—â–µ–Ω—ã —ç—Ç–∏ —Å–ª–æ–≤–∞.\nüí¨ –ü—Ä–æ—Å—å–±–∞ –Ω–µ –ø–∏—Å–∞—Ç—å –∏—Ö –±–æ–ª—å—à–µ.\nüí• [id{event.user_id}|–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ] +1.")
                    return

        if event.attachments.get("attach1_type"):
            if event.attachments["attach1_type"] == "wall":
                try:
                    vk.method("messages.delete", {"peer_id": event.peer_id,"message_id": event.message_id, "delete_for_all": "1"})
                except Exception as error:
                    return
                send_message(vk, event, f"üëÅ –í —á–∞—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–æ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –ø–æ—Å—Ç—ã.\nüí¨ –ü—Ä–æ—Å—å–±–∞ –Ω–µ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –±–æ–ª—å—à–µ.\nüí• [id{event.user_id}|–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ] +1.")
                return

            elif event.attachments["attach1_type"] == "poll":
                try:
                    vk.method("messages.delete", {"peer_id": event.peer_id,"message_id": event.message_id, "delete_for_all": "1"})
                except Exception as error:
                    return
                send_message(vk, event, f"üëÅ –í —á–∞—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–æ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –æ–ø—Ä–æ—Å—ã.\nüí¨ –ü—Ä–æ—Å—å–±–∞ –Ω–µ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –±–æ–ª—å—à–µ.\nüí• [id{event.user_id}|–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ] +1.")
                return

        if event.__dict__.get("source_act"):
            if event.source_act == "chat_invite_user_by_link":
                hello_user = vk.method("users.get", {"user_ids": event.user_id})[0]
                help_user = "[id" + str(owner_info["id"]) + "|.–∫ –ø–æ–º–æ—â—å]"
                user_link = "[id" + str(hello_user["id"]) + "|" + hello_user["first_name"] + " " + hello_user["last_name"] + "]"
                msg = f"""
üë§ –ü—Ä–∏–≤–µ—Ç, {user_link}. –†–∞–¥ –≤–∏–¥–µ—Ç—å.

üí¨ –ë—É–¥—É –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω –µ—Å–ª–∏ —Ä–∞—Å—Å–∫–∞–∂–µ—à—å –æ –Ω–∞—Å –¥—Ä—É–∑—å—è–º.
–£–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –ø—Ä–æ–ø–∏—à–∏: {help_user}

‚ù§ –°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è."""
                send_message(vk, event, msg)
                return
            if event.source_act == "chat_invite_user":
                hello_user = vk.method("users.get", {"user_ids": event.source_mid})[0]
                help_user = "[id" + str(owner_info["id"]) + "|.–∫ –ø–æ–º–æ—â—å]"
                user_link = "[id" + str(hello_user["id"]) + "|" + hello_user["first_name"] + " " + hello_user["last_name"] + "]"
                msg = f"""
üë§ –ü—Ä–∏–≤–µ—Ç, {user_link}. –†–∞–¥ –≤–∏–¥–µ—Ç—å.

üí¨ –ë—É–¥—É –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω –µ—Å–ª–∏ —Ä–∞—Å—Å–∫–∞–∂–µ—à—å –æ –Ω–∞—Å –¥—Ä—É–∑—å—è–º.
–£–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –ø—Ä–æ–ø–∏—à–∏: {help_user}

‚ù§ –°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è."""
                send_message(vk, event, msg)
                return
        else:
            return
    except:
        return
